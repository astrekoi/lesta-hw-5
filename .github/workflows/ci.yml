name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      COMPOSE_PROJECT_NAME: lesta-start
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "API_PORT=${{ secrets.API_PORT }}" > .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "NGINX_PORT=${{ secrets.NGINX_PORT }}" >> .env

      - name: Build Docker images
        run: |
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml push

      - name: Prepare .env content
        id: prepare-env
        run: |
          echo "ENV_CONTENT<<EOF" >> $GITHUB_ENV
          cat .env >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Deploy to production
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "repo: ${{ github.repository }}"

            sudo mkdir -p /opt/lesta-start
            sudo chown -R $USER:$USER /opt/lesta-start

            cd /opt/lesta-start
            if [ ! -d .git ]; then
              git clone https://github.com/astrekoi/lesta-hw-5.git .
            fi

            git pull origin main
            cat << EOF > .env
            ${{ env.ENV_CONTENT }}
            EOF

            docker compose down
            docker compose --env-file .env up -d --build
            docker system prune -f

      - name: Verify deployment
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sleep 10
            curl -sSf http://localhost:${{ secrets.NGINX_PORT }}/ping
            docker ps
